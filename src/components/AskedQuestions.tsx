import { PlusIcon } from "lucide-react";
import { Accordion as AccordionPrimitive } from "radix-ui";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
} from "@/components/ui/accordion";

const items = [
  {
    id: "1",
    title: "Connected accounts",
    sub: "How Medical Teams and Patients Stay in Sync",
    content:
      "Medical member share their code that is generated by the app to connect with patients. This allows for seamless communication and coordination of care. Patients can view their medical team's schedule, upcoming appointments, and any notes or updates shared by their healthcare providers.",
  },
  {
    id: "2",
    title: "Notifications",
    sub: "Customize your notification preferences as a patient",
    content:
      "Choose which notifications you want to receive, such as medication reminders, appointment updates, and health tips. You can also set your preferred notification channels, whether it's via email, SMS, or in-app notifications. This ensures you stay informed about your health without being overwhelmed by unnecessary alerts.",
  },
  {
    id: "3",
    title: "Medical Staff Code",
    sub: "What is the Medical Staff Code?",
    content:
      "The Medical Staff Code is a unique identifier generated by the app for healthcare professionals. It allows patients to connect with their medical team securely. By entering this code, patients can access their healthcare provider's schedule, view upcoming appointments, and receive important updates related to their care. This feature enhances communication and ensures that patients are always informed about their health management.",
  },
  {
    id: "4",
    title: "Contact support",
    sub: "We're here to help 24/7",
    content:
      "Our support team is available around the Clock to assist you. For technical issues, or general questions, you can reach us through live chat, email at MedReminder@gmail.com, or schedule a call with our technical team. Premium support is available for all.",
  },
];

export default function AskedQuestions() {
  return (
    <div className="space-y-4 mx-auto pb-16 max-w-[1280px]">
      <div className="flex flex-col gap-5">
        <div className="flex justify-center items-center mb-2 text-xl">
          <div className="bg-green-400 mr-2 rounded-full w-2 h-2"></div>
          <span className="font-semibold text-green-500 md:text-base text-xl tracking-wider">
            FAQ
          </span>
          <div className="bg-green-400 ml-2 rounded-full w-2 h-2"></div>
        </div>
        <h2 className="font-extrabold text-blue-900 text-5xl text-center animate-pulse">
          Frequently asked questions
        </h2>
        <div>
          <p className="mb-8 text-[17px] text-center">
            Everything you need to know about the App
          </p>
        </div>
      </div>
      <Accordion
        type="single"
        collapsible
        className="flex flex-col content-center gap-2 mx-auto w-full h-auto"
        defaultValue="1"
      >
        {items.map((item) => (
          <AccordionItem
            value={item.id}
            key={item.id}
            className="bg-white px-5 py-2 border-[#0609181f] border-2 rounded-lg"
          >
            <AccordionPrimitive.Header className="flex">
              <AccordionPrimitive.Trigger className="flex flex-1 justify-between items-center [&[data-state=open]>svg>path:last-child]:opacity-0 py-2 focus-visible:border-ring rounded-md outline-none focus-visible:ring-[3px] focus-visible:ring-ring/50 font-semibold text-[15px] text-left leading-6 [&[data-state=open]>svg]:rotate-180 [&[data-state=open]>svg>path:last-child]:rotate-90 [&>svg>path:last-child]:origin-center transition-all [&>svg>path:last-child]:transition-all [&>svg>path:last-child]:duration-200">
                <span className="flex flex-col space-y-1">
                  <span className="text-blue-900 text-lg">{item.title}</span>
                  {item.sub && (
                    <span className="opacity-90 font-normal text-blue-900 text-sm">
                      {item.sub}
                    </span>
                  )}
                </span>
                <PlusIcon
                  size={16}
                  className="opacity-60 transition-transform duration-200 pointer-events-none shrink-0"
                  aria-hidden="true"
                />
              </AccordionPrimitive.Trigger>
            </AccordionPrimitive.Header>
            <AccordionContent className="pb-2 text-[#000D44]">
              {item.content}
            </AccordionContent>
          </AccordionItem>
        ))}
      </Accordion>
    </div>
  );
}
